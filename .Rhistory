data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.background = element_rect(
color="black", fill="bule", size=1.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.background = element_rect(
color="black", fill="blue", size=1.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.background = element_rect(
color="black", fill="green", size=1.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.background = element_rect(
color="black", fill="green", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold.italic"
),
strip.background = element_rect(
color="black", fill="green", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold"
),
strip.background = element_rect(
color="black", fill="green", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold"
),
strip.background = element_rect(
color="black", fill="#29c3ea", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold"
),
strip.background = element_rect(
color="black", fill="#3eb9d8", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold"
),
strip.background = element_rect(
fill="#3eb9d8", size=0.5, linetype="solid"
)
)
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
axis.x.line
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(
strip.text.y = element_text(
size = 10, color = "black", face = "bold"
),
strip.background = element_rect(
fill="#3eb9d8", size=0.5, linetype="solid"
)
)+theme( axis.line= element_line(colour = "white",
size = 1, linetype = "solid"))
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="left",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="top",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="top",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(axis.line.y = element_line(colour = "#3eb9d8",size = 5,linetype = "solid"))
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="top",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line.x = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
#theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(axis.line.y = element_line(colour = "#3eb9d8",size = 5,linetype = "solid"))
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="top",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line.x = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+
theme(axis.line.y = element_line(colour = "#3eb9d8",size = 5,linetype = "solid"))
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="bottom",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+NULL
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "fixed",shrink = FALSE,as.table = TRUE,strip.position="bottom",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())+NULL
#theme(axis.line.y = element_line(colour = "#3eb9d8",size = 5,linetype = "solid"))
ggsave("dot.plot.3.jpeg")
library(devtools)
devtools::build()
build()
library(devtools)
devtools::build_rmd()
devtools::build_rmd("README.Rmd")
devtools::build_readme()
devtools::build()
require(getopts)
require(getopt)
if(!reuquire(getopt))install.packages("getopt")
if(!require(getopt))install.packages("getopt")
if(!require(getopt))install.packages("getopt")
library(getopt)
library(optparse)
if(!require(optparse))install.packages("optparse")
library(optparse)
library(optparse)
# 描述参数的解析方式
option_list <- list(
make_option(c("-f", "--first"), type = "integer", default = FALSE,
action = "store", help = "This is first!"
),
make_option(c("-s", "--second"), type = "character", default = FALSE,
action = "store", help = "This is second!"
),
make_option(c("-t", "--third"), type = "double", default = FALSE,
action = "store", help = "This is third!"
),
# make_option(c("-h", "--help"), type = "logical", default = FALSE,
#             action = "store_TRUE", help = "This is Help!"
# )
)
# 解析参数
opt = parse_args(OptionParser(option_list = option_list, usage = "This Script is a test for arguments!"))
print(opt)
option_list
library(enrichR)
install.packages("enrichR_0.0.1.0.tar.gz", repos = NULL, type = "source")
setwd("E:/bioinformation_center/nongken")
install.packages("enrichR_0.0.1.0.tar.gz", repos = NULL, type = "source")
library(enrichR)
install.packages("enrichR_0.0.1.0.tar.gz",repos = NULL, type = "source")
library(enrichR)
library(devtools)
devtools::build()
setwd("E:/bioinformation_center/Rcode/dotplot/")
data1 <- read.csv("dotplot.csv",header = T,na.strings = "NA")
# Libraries
library(ggplot2)
library(dplyr)
library(tidyr)
test <- data1 %>% group_by(chr) %>% summarise(length,chr_len=max(length))
geom_rect(data=test, aes(xmin=0, xmax=count+5, ymin=0, ymax=chr_len), fill="green", alpha=0.1, inherit.aes = FALSE)
# data1 %>% gather(type,count,-chr,-length) %>%
#   #filter(chr=="A1"|| chr=="A2") %>%
#   arrange(chr,length)%>%
#   mutate(level=cut(count, breaks=c(-Inf,10,20,30,40,50,Inf),labels=c("5","15","25","35","45","55")))%>%
#   NULL
##face_wrap
data1 %>% gather(type,count,-chr,-length) %>%
#filter(chr=="A1"|| chr=="A2") %>%
arrange(chr,length) %>%
ggplot(aes(x=type,y=length,size=count,color=type))+
facet_wrap(~chr,scales = "free_x",shrink = FALSE,as.table = TRUE,strip.position="bottom",nrow=1)+
geom_point(alpha=0.6,na.rm = TRUE)+
scale_size(range = c(.1,3),limits = c(1,85),name = "count")+
#scale_y_continuous(expand = c(0, 0))+
theme_classic()+
theme(axis.title = element_blank(),axis.line = element_blank())+
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())+ #NULL
theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
data_GO_all <- read.csv("data_GO_all.top15.csv")
data_GO_all <- read.csv("E:\bioinformation_center\nongken\data_GO_all.top15.csv")
data_GO_all <- read.csv("E:/bioinformation_center/nongken/data_GO_all.top15.csv")
library(ggplot2)
ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
#facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
#scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=c(4,7))+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
xlabels <- c("HS0","HS9","HR1_0","HR1_5","HR1_8","HR1_9","HR2_2","HR2_3","HR2_5","HR2_6","HR2_7")
ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
#facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
#scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=c(4,7))+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
GO <- read.delim("Gh.GO.info",header = T)
head(GO[,2],50)
term <- c("term")
for (i in 1:length(GO[,2])){
if(nchar(GO[,2][i])>60){
term <- append(term,GO[,2][i])
print(GO[,2][i])
GO[,2][i] <- strsplit(GO[,2][i],split= ",")[[1]][1]
}
}
data_GO_all$group
data_GO_all$type
ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
#scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=c(4,7))+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
dotplot
head(data_GO_all)
subset(data_GO_all,-c(group))
subset(data_GO_all,-c(group))
subset(data_GO_all,-group)
data_GO_all$group <- NULL
head(data_GO_all)
saveRDS(data_GO_all,"data_GO_all.Rda")
rm(data_GO_all)
load("../data/data_GO_all.Rdata")
setwd("E:\pakwork\cancer\enrichR\data")
setwd("E:/pakwork/cancer/enrichR/data")
setwd("E:/pakwork/cancer/enrichR/")
load("./data/data_GO_all.Rdata")
data_GO_all <- read.csv("./data/data_GO_all.top10.csv",header = T)
data_GO_all <- read.csv("./data/data_GO_all.top15.csv",header = T)
saveRDS(data_GO_all,file = "data_GO_all.Rdata")
load("./data/data_GO_all.Rdata")
library(dplyr)
library(tidyverse)
saveRDS(file = "test.Rdata")
saveRDS(xlabels,file = "./data/labels.Rdata")
rm(xlabels)
load("./data/labels.Rdata")
getwd()
load("./data/data_GO_all.Rdata")
load("data/data_GO_all.Rdata")
load("E:/pakwork/cancer/enrichR/data/data_GO_all.Rdata")
load("E:/pakwork/cancer/enrichR/data/data_GO_all.Rdata")
load("data/labels.Rdata")
load("data/PCA.Rdata")
data_GO_all <- read.csv("./data/data_GO_all.top15.csv",header = T)
xlabels <- c("HS0","HS9","HR1_0","HR1_5","HR1_8","HR1_9","HR2_2","HR2_3","HR2_5","HR2_6","HR2_7")
save(data_GO_all,xlabels,file = "./data/data_GO_all.Rdata")
rm(list=ls())
load("/data/data_GO_all.Rdata")
load("data/data_GO_all.Rdata")
setwd(data)
setwd("data")
dotplot <- function(data_GO_all,xlabels=data_GO_all$type,output,ranges=c(4,7)){
ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
#facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
#scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=ranges)+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
#+coord_flip()
ggsave(paste0(output,".tiff"),width = 170,height = 150,units = c("mm"),dpi=300)
ggsave(paste0(output,".pdf"),width = 170,height = 230,units = c("mm"),dpi=300)
write.csv(data_GO_all,file=paste0(output,".csv"))
}
dotplot <- function(data_GO_all,xlabels=data_GO_all$type,output,ranges=c(4,7)){
ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
#facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
#scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=ranges)+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
#+coord_flip()
ggsave(paste0(output,".eps"),width = 170,height = 150,units = c("mm"),dpi=300)
ggsave(paste0(output,".tiff"),width = 170,height = 150,units = c("mm"),dpi=300)
ggsave(paste0(output,".pdf"),width = 170,height = 230,units = c("mm"),dpi=300)
write.csv(data_GO_all,file=paste0(output,".csv"))
}
#气泡图可视化富集结果
dotplot <- function(data_GO_all,xlabels=data_GO_all$type,output,ranges=c(4,7)){
p1 <- ggplot(data_GO_all) +
geom_point(aes(x=type,y=Description,fill = adjust,size=Count),alpha=0.9,pch=21)+
#facet_wrap(~ group)+
#fill对应点的填充色，colour对应点的边框色
#scale_fill_gradient(low='yellow',high='Red') + #设定颜色的变化范围
scale_fill_gradient(low='SpringGreen',high='DeepPink') + #设定颜色的变化范围
#scale_size_area() + #设定点的大小比例和图例上显示的间隔
labs(y='GO term',x='Type',fill='P.adjust',size='Count number')+
scale_size_continuous(range=ranges)+ #设置气泡的收缩比例，差值越大，最大气泡越大
scale_x_discrete(labels= xlabels)+
theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5),axis.title.y = element_text(size = 7))
#+coord_flip()
ggsave(paste0(output,".eps"),width = 170,height = 150,units = c("mm"),dpi=300)
ggsave(paste0(output,".tiff"),width = 170,height = 150,units = c("mm"),dpi=300)
ggsave(paste0(output,".pdf"),width = 170,height = 230,units = c("mm"),dpi=300)
write.csv(data_GO_all,file=paste0(output,".csv"))
print(p1)
return(p1)
}
p1
dotplot(data_GO_all = data_GO_all,xlabels = xlabels,output="demo")
library(ggplot2)
dotplot(data_GO_all = data_GO_all,xlabels = xlabels,output="demo")
